install.packages("deSolve", dependencies=TRUE)
install.packages("lubridate", dependencies=TRUE)
install.packages("gstat")
require(tidyverse)
require(deSolve)
require(lubridate)
require(gstat)
require(lattice)
require(mgcv)
source('D:/R_projects/Epidemic_Modelling_Workshop_Unitid/script/epi_modelling_intro.R')
source('D:/R_projects/Epidemic_Modelling_Workshop_Unitid/script/Dominic_liveCoding.R', encoding = 'UTF-8')
solution2 <- function(ts, start.t=round(length(ts)/2)){
tmp = ts[start.t:length(ts)]
paek=max(tmp)
trough=min(tmp)
ratio=peak/trough
return(c(peak=peak, trough=trough,ratio=ratio))
}
require(rgdal)
require(maptools)
rusinga <- readshapepoly("D:/workshops/UNITID_Modelling_workshop/day2/data/rusinga/rusinga.shp")
require(maptools)
a
rusinga <- readShapePoly("D:/workshops/UNITID_Modelling_workshop/day2/data/rusinga/rusinga.shp")
plot(rusinga)
plot(rusinga)
plot(rusinga)
points <- read.csv("D:/workshops/UNITID_Modelling_workshop/day2/data/points/hh.csv")
points
points[, c("latmean",  "lngmean")]
plot(rusinga)
points <- SpatialPoints(points)
plot(points, add= TRUE , col = 'red')
points
points = points[, c("latmean",  "lngmean")]
plot(rusinga)
#points <- SpatialPoints(points)
plot(points, add= TRUE , col = 'red')
points <- SpatialPoints(points)
plot(points, add= TRUE , col = 'red')
plot(rusinga)
points <- SpatialPoints(points)
plot(points, add= TRUE , col = 'red')
library(ggplot2)
library(dplyr)
library(sp)
library(rgdal)
plot(rusinga)
points <- SpatialPoints(points)
plot(points, add= TRUE , col = 'red')
source('~/.active-rstudio-document')
plot(rusinga)
